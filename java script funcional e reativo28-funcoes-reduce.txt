------------------------------------------------------------
JAVASCRIPT FUNCIONAL E REATIVO - PENSE COMO UM DEV JS
------------------------------------------------------------

Reduce

O MEP ele simplesmente transforma Harry em outra de mesmo tamanho o fio dele vai fazer um filtro.

Ele vai tirar alguns elementos.

Já o Edu ele pode fazer qualquer coisa e eu vou começar com um olá mundo do Edu que é mostrando somar

ou seja que eu quero somar todos os números.

Pra isso vou usar o Windows tá.

Então a forma de se chamar da mesma forma dos outros aí então você vai ter aqui por exemplo o nome do

Harry a variável.

Então Rei ponto você vai ter a função Windows.

E aqui você vai passar como parâmetro.

Edu se você pode passar potencialmente duas coisas um vai ser a função que será executada e um segundo

parâmetro pode ser o dado inicial com colocar só o que falta de espaço.

Você pode passar um valor inicial poluído e essa função da qual vai ser a lógica primeira vai focar

aqui no que seria essa função e como ela funciona.

Vamos supor que eu tenha aqui um determinado valor inicial 0 pra fazer a soma de todos os elementos

valor inicial 0 faz todo sentido que ele não vai influenciar na soma tá.

Como é que vai ser feito a execução do algoritmo para aquele sobre todos os valores usando o Windows

8 se ele vai receber dois valores na função diferente do Mac que recebe apenas um elemento Windows.

Ele vai receber o primeiro elemento vai ser um acumulador esse elemento é sempre o processamento anterior.

E aí vai ter o valor atual que é o elemento.

Ou seja além de receber o elemento só complemento ao segundo parâmetro o primeiro parâmetro vai ser

o acumulado.

E nesse caso como eu quero somar o que essa função vai fazer em outras palavras é pegar o valor do acumulador

que seria o total mais o valor do elemento atual.

Que tal deixar de estar aqui para esse caso desses números aqui no primeiro caso com o valor inicial

é zero.

Ele vai passar vou colocar até outra coloquei amarelinho ele vai passar o zero como um primeiro parâmetro

como acumulador já que a primeira vez que está executando e o elemento 3 que é o primeiro elemento da

raiz de tal forma que executando essa operação de soma.

O resultado aqui vai ser 3 legal então tem 1 0 mais 3 no estado 3 na segunda vez que ele for chamar

o acumulador a resposta anterior então vou que o número 3 o passo a resposta anterior pra cá e tal forma

que eu tenho o número 3 como sendo o acumulador é o segundo elemento é o número 2 então ele vai passar

com o número 2 para a qual está de tal forma que agora tem um resultado 5.

Então ele já fez a primeira execução.

O primeiro elemento com o valor inicial na segunda execução o segundo elemento foi passado a resposta

do anterior foi passada com uma calculadora.

Aqui vai continuar acontecendo isso.

A resposta anterior que deu 5 vai vim pra cá ou seja 5 e vai ser o terceiro elemento que no caso elemento

1 é a resposta que vai dar.

6.

A próxima chamada Eu vou colocar aqui do lado pra não descer mais a tela próxima chamada.

Ele vai pegar a resposta anterior que é 6 vai passar essa resposta com um acumulador pra cá e o próximo

elemento depois do 1 vai ser o menos 3 de tal forma que o resultado da soma vai dar 3 ele vai diminuir

um pouco porque o elemento quer um número negativo.

A resposta desse vai vir como parâmetro pra um outra chamada.

Ou seja vai ser acumulada ou 3 eu posso me lamento e o 7 é o 4 melhor dizendo a resposta vai dar certo.

Finalmente a última chamada lhe vai pagar o 7 como acumulador passando como parâmetro e vai ter mais

um 7 e o resultado vai dar 14.

Então percebo que eu transformei que eu transformei Marry de várias posições 6 posições e transformei

no final em um número.

Ou seja o resultado final do produto foi um número ou seja transformei o Harry em uma obra diferente

no mapa o metro transformou o rei em outro Rei o filtro transformou o rei em outra Rei.

Só que filtrar os alimentos já o idoso pode transformá la rei em qualquer coisa.

O que vai definir a transformação é exatamente essa função como você recebe sempre o resultado da função

anterior.

Você pode colocar qualquer coisa dentro dessa resposta inclusive o valor inicial.

Em vez de ser só um número zero poderia ser um objeto JavaScript com algum atributo por exemplo quantidade

igual a zero e se você sempre retornasse esse objeto para o próximo você poderia tratar isso como objeto

o acumulador em vez de ser um valor numérico poderia ser um objeto eu vou fazer mais um exemplo pra

ficar bem claro pra você.

Essa idéia do Windows com aquele é um pouco mais enrolado.

Então a ideia é essa uma outra forma que você tem ou colocar aqui tudo de amarelo para ficar um pouco

mais aqui não vou pagar aqui a rede quatro posições então tenho aqui bem simples 1 2 3 e 4.

Eu quero fazer agora a soma de todos esses valores a aposta é fazer a multiplicação para ficar um pouco

diferente.

Então quer que vá acontecer eu vou ter uma função fi essa função vai receber um acumulador vai receber

o elemento atual.

O resultado dessa função é ser acumulado ou multiplicado pelo elemento atual.

Vamos supor que eu não tenha um valor inicial não queira passar o valor inicial.

Nesse caso a primeira chamada certo que ele vai fazer ele vai passar o primeiro elemento como sendo

o acumulador ou seja 1 e o segundo elemento vai ser exatamente o segundo elemento do rei.

Quando não tem um valor inicial então nesse caso a resposta 2 vezes um resultado vai da 2 legal e o

resto continua exatamente do mesmo jeito.

Então o resultado anterior será passado como acumulado ou seja 2 e agora tenho 3.

O resultado vai dar 6 par.

E finalmente vou passar aqui o 6 como resposta pra cá e vou até o 4 o 4 2 e 6 vai dar 24.

Então o resultado final deu 20 4 também transformei a rede de números é o único elemento exatamente

aqui porque a minha função tinha essa lógica e sempre retorna ao valor numérico então sempre que você

vai retornando um determinado valor para o acumulador é esperado que o estado final seja exatamente

do tipo que você está usando como acumulador legal.

Então aqui só para mostrar mais um exemplo nesse caso tiveram apenas 3 execuções exatamente porque os

dois primeiros elementos foram passada para a primeira chamada porque nesse caso não tem valor inicial.

Se você tivesse passado um valor inicial 0 por exemplo o resultado seria zero no final né.

Então pega nesse mesmo exemplo só que simulando com o valor inicial.

Então só pra ficar bem clara a diferença.

Então você tem 1 2 3 4 imaginando que você tem aqui um valor inicial 0 na primeira chamada vai passar

0 e 1 e a resposta é zero.

Na segunda chamada ele vai pegar o estado anterior ou vai passar aqui vai passar a 2 resultado zero

no terceiro ele vai passar também o acumulado 0 3.

O resultado vai da 0.

E finalmente esse 0 aqui vai ser passado pra casa eram 4.

A multiplicação desses dois estados era então seu valor inicial fosse zero então o resultado final seria

zero.

Mas você pode colocar qualquer valor inicial.

Quero começar com um valor 3.

Aí ele faça o 3 2 1 3 3 pra cá 2 2 6 6 vezes 13 18 18 vezes.

4 vai dar algum número 72 horas está na área perigoso do valor inicial mas quando tem valor inicial

a primeira chamada é o valor inicial mais o primeiro elemento quando não tem valor inicial.

O primeiro elemento mais o segundo elemento é passado para a primeira execução como foi o caso que eu

mostrei nesse exemplo aqui tem história tem ficado claro um pouco de redução um pouco na mecânica a

gente vai bem na prática como funciona é mais um exemplo pra ficar bem claro e aproximá lo.